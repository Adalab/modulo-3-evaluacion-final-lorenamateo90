{"version":3,"sources":["services/api.js","Components/Loading.js","Components/CharacterCard.js","Components/CharacterList.js","Components/FilterByName.js","Components/Filters.js","Components/CharacterDetail.js","images/logo.png","Components/App.js","index.js"],"names":["api","fetch","then","response","json","data","results","map","character","id","name","species","image","status","episodes","episode","length","origin","Loading","className","CharacterCard","props","to","src","alt","title","CharacterList","userElements","characters","prototype","PropTypes","array","FilterByName","htmlFor","type","onChange","ev","handleFilter","value","target","key","Filters","onSubmit","preventDefault","nameFilter","CharacterDetail","console","log","App","useState","setCharacters","setNameFilter","isLoading","setIsLoading","useEffect","filteredCharacters","filter","toUpperCase","includes","sort","a","b","logo","exact","path","component","routeCharacterId","parseInt","match","params","foundCharacter","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a445e34.chunk.js","sourcesContent":["const api = () => {\n  return fetch(\n    'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          species: character.species,\n          image: character.image,\n          status: character.status,\n          episodes: character.episode.length,\n          origin: character.origin.name,\n        };\n      });\n    });\n};\n\nexport default api;\n","import React from 'react';\n\nconst Loading = () => {\n  return <div className='loading'></div>;\n};\nexport default Loading;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styleSheets/CharacterCard.scss';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n  return (\n    <>\n      <Link to={`/character/${props.id}`}>\n        <li className='item__card--list' key={props.id} id={props.id}>\n          <img\n            className='item__card--img'\n            src={props.character.image}\n            alt={`Foto de ${props.character.name}`}\n            title={`Foto de ${props.character.name}`}\n          />\n          <h4 className='item__card--title'>{props.character.name}</h4>\n          <p className='item__card--description'>{props.character.species}</p>\n        </li>\n      </Link>\n    </>\n  );\n};\n\nCharacterCard.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  species: PropTypes.string,\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport '../styleSheets/CharacterList.scss';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = (props) => {\n  const userElements = props.characters.map((character) => {\n    return (\n      <CharacterCard\n        key={character.id}\n        id={character.id}\n        character={character}\n      />\n    );\n  });\n\n  return (\n    <section>\n      <ul className='list'>{userElements}</ul>\n    </section>\n  );\n};\nCharacterList.prototype = {\n  characters: PropTypes.array,\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport '../styleSheets/FilterByName.scss';\n\nconst FilterByName = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'nameFilter',\n    });\n  };\n  return (\n    <div className='form'>\n      <label className='form__label' htmlFor='name'>\n        Find your favorite character\n      </label>\n      <input\n        className='form__input-text'\n        type='text'\n        name='name'\n        id='name'\n        // placeholder=\"Busca tu personaje favorito\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default FilterByName;\n","import React from 'react';\nimport FilterByName from './FilterByName';\nimport '../styleSheets/Filters.scss';\n\n// controlamos el input con el preventDefault\nconst Filters = (props) => {\n  const preventEvent = (ev) => {\n    ev.preventDefault(ev);\n  };\n  return (\n    <section>\n      <form className='form' onSubmit={preventEvent}>\n        <FilterByName\n          handleFilter={props.handleFilter}\n          nameFilter={props.nameFilter}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Filters;\n","import React from 'react';\nimport '../styleSheets/CharacterDetail.scss';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = (props) => {\n  console.log(props.image);\n  return (\n    <div className='container'>\n      <div className='detail'>\n        <section className='detail__section'>\n          <img className='detail__img' src={props.image} alt={props.name}></img>\n\n          <ul>\n            <li className='detail__name'>{props.name}</li>\n            <li>{props.species}</li>\n            <li>{props.origin}</li>\n            <li>{props.episodes}</li>\n            <li>{props.status}</li>\n          </ul>\n          <Link to='/'>\n            <div className='button'>\n              <p>Back</p>\n            </div>\n          </Link>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterDetail;\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import '../styleSheets/App.scss';\nimport api from '../services/api';\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Loading from './Loading';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail';\nimport logo from '../images/logo.png';\n\n// states\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // fetch\n  useEffect(() => {\n    setIsLoading(true);\n    api().then((data) => {\n      setCharacters(data);\n      setIsLoading(false);\n    });\n  }, []);\n  // Primero me sale un array vacío y luego los 20, si no pongo array vacío no para de hacer llamdas al servidor\n\n  // event handler\n  const handleFilter = (data) => {\n    if (data.key === 'nameFilter') {\n      setNameFilter(data.value);\n    }\n  };\n  //Filtrado de personajes\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toUpperCase().includes(nameFilter.toUpperCase());\n  });\n\n  //Organizamos los personajes por orden alfabético\n  characters.sort(function (a, b) {\n    if (a.name < b.name) return -1;\n    if (a.name > b.name) return 1;\n    return 0;\n  });\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    const foundCharacter = characters.find((character) => {\n      return routeCharacterId === character.id;\n    });\n    if (foundCharacter) {\n      return (\n        <CharacterDetail\n          image={foundCharacter.image}\n          name={foundCharacter.name}\n          species={foundCharacter.species}\n          origin={foundCharacter.origin}\n          episodes={foundCharacter.episodes}\n          status={foundCharacter.status}\n        />\n      );\n    } else {\n      return <p>El personaje que busca no existe</p>;\n    }\n  };\n\n  return (\n    <div className='container'>\n      {isLoading === true ? <Loading /> : null}\n      <div>\n        <header className='header'>\n          <img src={logo} alt='Rick and Morty' title='Rick and Morty' />\n        </header>\n        <main>\n          <Filters handleFilter={handleFilter} />\n          <Switch>\n            <Route exact path='/'>\n              <CharacterList\n                nameFilter={nameFilter}\n                characters={filteredCharacters}\n              />\n            </Route>\n            <Route path='/character/:id' component={renderCharacterDetail} />\n          </Switch>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './styleSheets/index.scss';\nimport App from './Components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}